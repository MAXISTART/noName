import com.school.store.admin.admin.entity.Admin;
import com.school.store.admin.userToPermission.entity.UserToPermission;
import com.school.store.admin.userToPermission.service.UserToPermissionService;
import com.school.store.base.controller.BaseAdminController;
import com.school.store.enums.ResultEnum;
import com.school.store.vo.ResultVo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Sort;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/admin/userToPermission")
public class UserToPermissionController extends BaseAdminController {

    @Autowired
    private UserToPermissionService userToPermissionService;

    @PostMapping("/addUserToPermission")
    public ResultVo addUserToPermission(@RequestBody UserToPermission userToPermission, @SessionAttribute("admin") Admin admin) {

        userToPermissionService.save(entityUtil.updateInfoDefault(userToPermission, admin.getId(), admin.getId(), true));
        return simpleResult(ResultEnum.SUCCESS, null);
    }


    @PostMapping(value = "/updateUserToPermission")
    public ResultVo updateUserToPermission(@RequestBody UserToPermission userToPermission, @SessionAttribute("admin") Admin admin) {
        // 更新的话不需要更改 创建者和创建时间
        userToPermissionService.save(entityUtil.updateInfoDefault(userToPermission, null, admin.getId(), false));
        return simpleResult(ResultEnum.SUCCESS, null);
    }


    @PostMapping(value = "/deleteUserToPermission")
    public ResultVo deleteUserToPermission(@RequestBody UserToPermission userToPermission, @SessionAttribute("admin") Admin admin) {
        // 这里的RequestBody 的 user只需要一个id就行了
        userToPermissionService.delete(userToPermission);
        return simpleResult(ResultEnum.SUCCESS, null);
    }

    @PostMapping(value = "/deleteUserToPermissions")
    public ResultVo deleteUserToPermissions(@RequestBody List<UserToPermission> userToPermissions, @SessionAttribute("admin") Admin admin) {
        // 这里的RequestBody 的 userToPermissions 是一个 userToPermission 的数组
        userToPermissionService.delete(userToPermissions);
        return simpleResult(ResultEnum.SUCCESS, null);
    }


    /**
     * 参数 page ,size 是一定要有的 ，另外两个可以默认
     *
     * @param page      第几页
     * @param size      每页的包含多少纪录
     * @param direction 按照顺序还是逆序排列 （ASC 或者 DESC）
     * @param property  按照什么排列
     * @return
     */
    @GetMapping(value = "/findAllUserToPermissions")
    public ResultVo findAllUserToPermissions(@RequestParam(required = true) Integer page,
                                @RequestParam(required = false, defaultValue = "20") Integer size,
                                @RequestParam(required = false, defaultValue = "DESC") String direction,
                                @RequestParam(required = false, defaultValue = "updateTime") String property) {

        // 配置分页信息
        PageRequest pager = null;
        if (direction.equals("ASC")) {
            pager = new PageRequest(page, size, Sort.Direction.ASC, property);
        }
        if (direction.equals("DESC")) {
            pager = new PageRequest(page, size, Sort.Direction.DESC, property);
        }

        Page<UserToPermission> userToPermissions = userToPermissionService.findAll(pager);

        return simpleResult(ResultEnum.SUCCESS, userToPermissions);
    }


    /**
     *  防止代码重复的工具代码
     * @param userToPermission
     */
    public void setUserToPermissions(UserToPermission userToPermission){

    }

}


=============
下面的是service的代码
=============


import com.school.store.admin.userToPermission.entity.UserToPermission;
import com.school.store.base.repository.IBaseRepository;

import java.io.Serializable;

public interface UserToPermissionService extends IBaseRepository<UserToPermission, Serializable>{

}
